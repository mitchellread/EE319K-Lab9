


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Adit Jain, Edie Zhou
    3 00000000         ; Last modification date: 11/26/18
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000 00000000 
                       q       EQU              0           ; variable offset
   13 00000000 00000004 
                       r       EQU              4
   14 00000000 00000008 
                       s       EQU              8
   15 00000000 0000000C 
                       t       EQU              12
   16 00000000 00000010 
                       u       EQU              16
   17 00000000 00000014 
                       v       EQU              20
   18 00000000 00000018 
                       w       EQU              24
   19 00000000 0000001C 
                       x       EQU              28
   20 00000000 00000020 
                       y       EQU              32
   21 00000000 00000024 
                       z       EQU              36
   22 00000000         
   23 00000000                 IMPORT           ST7735_OutChar
   24 00000000                 IMPORT           ST7735_OutString
   25 00000000                 EXPORT           LCD_OutDec
   26 00000000                 EXPORT           LCD_OutFix
   27 00000000                 PRESERVE8
   28 00000000         
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000                 THUMB
   31 00000000         
   32 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   33 00000000         ; Output a 32-bit number in unsigned decimal format
   34 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   35 00000000         ; Output: none
   36 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   37 00000000         LCD_OutDec
   38 00000000         ;; --UUU-- Complete this (copy from Lab7-8)
   39 00000000 E92D 0FF0       PUSH             {R4 - R11}  ; save callee regis
                                                            ters
   40 00000004 B08A            SUB              SP, #40     ; allocate bytes fo
                                                            r local vars, max v
                                                            alue in each byte i
                                                            s 9



ARM Macro Assembler    Page 2 


   41 00000006         
   42 00000006 4993            LDR              R1, =1000000000 
                                                            ; divisor = 10E9
   43 00000008 FBB0 F3F1       UDIV             R3, R0, R1  ; divide by divisor
                                                            
   44 0000000C F103 0230       ADD              R2, R3, #48 ; add 48 to value f
                                                            or ASCII code
   45 00000010 F88D 2000       STRB             R2, [SP, #q] ; store value in b
                                                            ound variable using
                                                             offset
   46 00000014 FB01 0013       MLS              R0, R1, R3, R0 ; modulus divisi
                                                            on, leaves mod in R
                                                            0
   47 00000018         
   48 00000018 498F            LDR              R1, =100000000 ; divisor = 10E8
                                                            
   49 0000001A FBB0 F3F1       UDIV             R3, R0, R1
   50 0000001E F103 0230       ADD              R2, R3, #48
   51 00000022 F88D 2004       STRB             R2, [SP, #r]
   52 00000026 FB01 0013       MLS              R0, R1, R3, R0
   53 0000002A         
   54 0000002A 498C            LDR              R1, =10000000 ; divisor = 10E7
   55 0000002C FBB0 F3F1       UDIV             R3, R0, R1
   56 00000030 F103 0230       ADD              R2, R3, #48
   57 00000034 F88D 2008       STRB             R2, [SP, #s]
   58 00000038 FB01 0013       MLS              R0, R1, R3, R0
   59 0000003C         
   60 0000003C 4988            LDR              R1, =1000000 ; divisor = 10E6
   61 0000003E FBB0 F3F1       UDIV             R3, R0, R1
   62 00000042 F103 0230       ADD              R2, R3, #48
   63 00000046 F88D 200C       STRB             R2, [SP, #t]
   64 0000004A FB01 0013       MLS              R0, R1, R3, R0
   65 0000004E         
   66 0000004E 4985            LDR              R1, =100000 ; divisor = 10E5
   67 00000050 FBB0 F3F1       UDIV             R3, R0, R1
   68 00000054 F103 0230       ADD              R2, R3, #48
   69 00000058 F88D 2010       STRB             R2, [SP, #u]
   70 0000005C FB01 0013       MLS              R0, R1, R3, R0
   71 00000060         
   72 00000060 F242 7110       LDR              R1, =10000  ; divisor = 10E4
   73 00000064 FBB0 F3F1       UDIV             R3, R0, R1
   74 00000068 F103 0230       ADD              R2, R3, #48
   75 0000006C F88D 2014       STRB             R2, [SP, #v]
   76 00000070 FB01 0013       MLS              R0, R1, R3, R0
   77 00000074         
   78 00000074 F44F 717A       LDR              R1, =1000   ; divisor = 10E3
   79 00000078 FBB0 F3F1       UDIV             R3, R0, R1
   80 0000007C F103 0230       ADD              R2, R3, #48
   81 00000080 F88D 2018       STRB             R2, [SP, #w]
   82 00000084 FB01 0013       MLS              R0, R1, R3, R0
   83 00000088         
   84 00000088 F04F 0164       LDR              R1, =100    ; divisor = 10E2
   85 0000008C FBB0 F3F1       UDIV             R3, R0, R1
   86 00000090 F103 0230       ADD              R2, R3, #48
   87 00000094 F88D 201C       STRB             R2, [SP, #x]
   88 00000098 FB01 0013       MLS              R0, R1, R3, R0
   89 0000009C         
   90 0000009C F04F 010A       LDR              R1, =10     ; divisor = 10E1
   91 000000A0 FBB0 F3F1       UDIV             R3, R0, R1



ARM Macro Assembler    Page 3 


   92 000000A4 F103 0230       ADD              R2, R3, #48
   93 000000A8 F88D 2020       STRB             R2, [SP, #y]
   94 000000AC FB01 0013       MLS              R0, R1, R3, R0
   95 000000B0         
   96 000000B0 F100 0030       ADD              R0, R0, #48 ; remaining modulus
                                                             is ones place
   97 000000B4 F88D 0024       STRB             R0, [SP, #z]
   98 000000B8         
   99 000000B8 F89D 0000       LDRB             R0, [SP, #q] ; check vars for f
                                                            irst nonzero value 
                                                            
  100 000000BC 2830            CMP              R0, #48     ; starting with MSB
                                                            
  101 000000BE D123            BNE              A9
  102 000000C0         
  103 000000C0 F89D 0004       LDRB             R0, [SP, #r]
  104 000000C4 2830            CMP              R0, #48
  105 000000C6 D124            BNE              A8
  106 000000C8         
  107 000000C8 F89D 0008       LDRB             R0, [SP, #s]
  108 000000CC 2830            CMP              R0, #48
  109 000000CE D127            BNE              A7
  110 000000D0         
  111 000000D0 F89D 000C       LDRB             R0, [SP, #t]
  112 000000D4 2830            CMP              R0, #48
  113 000000D6 D12A            BNE              A6
  114 000000D8         
  115 000000D8 F89D 0010       LDRB             R0, [SP, #u]
  116 000000DC 2830            CMP              R0, #48
  117 000000DE D12D            BNE              A5
  118 000000E0         
  119 000000E0 F89D 0014       LDRB             R0, [SP, #v]
  120 000000E4 2830            CMP              R0, #48
  121 000000E6 D130            BNE              A4
  122 000000E8         
  123 000000E8 F89D 0018       LDRB             R0, [SP, #w]
  124 000000EC 2830            CMP              R0, #48
  125 000000EE D133            BNE              A3
  126 000000F0         
  127 000000F0 F89D 001C       LDRB             R0, [SP, #x]
  128 000000F4 2830            CMP              R0, #48
  129 000000F6 D136            BNE              A2
  130 000000F8         
  131 000000F8 F89D 0020       LDRB             R0, [SP, #y]
  132 000000FC 2830            CMP              R0, #48
  133 000000FE D139            BNE              A1
  134 00000100         
  135 00000100 F89D 0024       LDRB             R0, [SP, #z]
  136 00000104 2830            CMP              R0, #48
  137 00000106 E03C            B                A0          ; always prints las
                                                            t digit by default
  138 00000108         
  139 00000108         ; print value starting with first nonzero value
  140 00000108         ; R0 loaded with q by default
  141 00000108         A9                                   ; output char at q
  142 00000108 B501            PUSH             {LR,R0}
  143 0000010A F7FF FFFE       BL               ST7735_OutChar
  144 0000010E E8BD 4001       POP              {LR,R0}
  145 00000112         



ARM Macro Assembler    Page 4 


  146 00000112         A8                                   ; output char at r
  147 00000112 F89D 0004       LDRB             R0, [SP, #r]
  148 00000116 B501            PUSH             {LR,R0}
  149 00000118 F7FF FFFE       BL               ST7735_OutChar
  150 0000011C E8BD 4001       POP              {LR,R0}
  151 00000120         
  152 00000120         A7                                   ; output char at s
  153 00000120 F89D 0008       LDRB             R0, [SP, #s]
  154 00000124 B501            PUSH             {LR,R0}
  155 00000126 F7FF FFFE       BL               ST7735_OutChar
  156 0000012A E8BD 4001       POP              {LR,R0}
  157 0000012E         
  158 0000012E         A6                                   ; output char at t
  159 0000012E F89D 000C       LDRB             R0, [SP, #t]
  160 00000132 B501            PUSH             {LR,R0}
  161 00000134 F7FF FFFE       BL               ST7735_OutChar
  162 00000138 E8BD 4001       POP              {LR,R0}
  163 0000013C         
  164 0000013C         A5                                   ; output char at u
  165 0000013C F89D 0010       LDRB             R0, [SP, #u]
  166 00000140 B501            PUSH             {LR,R0}
  167 00000142 F7FF FFFE       BL               ST7735_OutChar
  168 00000146 E8BD 4001       POP              {LR,R0}
  169 0000014A         
  170 0000014A         A4                                   ; output char at v
  171 0000014A F89D 0014       LDRB             R0, [SP, #v]
  172 0000014E B501            PUSH             {LR,R0}
  173 00000150 F7FF FFFE       BL               ST7735_OutChar
  174 00000154 E8BD 4001       POP              {LR,R0}
  175 00000158         
  176 00000158         A3                                   ; output char at w
  177 00000158 F89D 0018       LDRB             R0, [SP, #w]
  178 0000015C B501            PUSH             {LR,R0}
  179 0000015E F7FF FFFE       BL               ST7735_OutChar
  180 00000162 E8BD 4001       POP              {LR,R0}
  181 00000166         
  182 00000166         A2                                   ; output char at x
  183 00000166 F89D 001C       LDRB             R0, [SP, #x]
  184 0000016A B501            PUSH             {LR,R0}
  185 0000016C F7FF FFFE       BL               ST7735_OutChar
  186 00000170 E8BD 4001       POP              {LR,R0}
  187 00000174         
  188 00000174         A1                                   ; output char at y
  189 00000174 F89D 0020       LDRB             R0, [SP, #y]
  190 00000178 B501            PUSH             {LR,R0}
  191 0000017A F7FF FFFE       BL               ST7735_OutChar
  192 0000017E E8BD 4001       POP              {LR,R0}
  193 00000182         
  194 00000182         A0                                   ; output char at z
  195 00000182 F89D 0024       LDRB             R0, [SP, #z]
  196 00000186 B501            PUSH             {LR,R0}
  197 00000188 F7FF FFFE       BL               ST7735_OutChar
  198 0000018C E8BD 4001       POP              {LR,R0}
  199 00000190         
  200 00000190 B00A            ADD              SP, #40     ; deallocate memory
                                                             for local vars
  201 00000192 E8BD 0FF0       POP              {R4 - R11}  ; pop callee regist
                                                            ers
  202 00000196 4770            BX               LR



ARM Macro Assembler    Page 5 


  203 00000198         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
  204 00000198         
  205 00000198         ; -----------------------LCD _OutFix--------------------
                       --
  206 00000198         ; Output characters to LCD display in fixed-point format
                       
  207 00000198         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
  208 00000198         ; Inputs:  R0 is an unsigned 32-bit number
  209 00000198         ; Outputs: none
  210 00000198         ; E.g., R0=0,    then output "0.000 "
  211 00000198         ;       R0=3,    then output "0.003 "
  212 00000198         ;       R0=89,   then output "0.089 "
  213 00000198         ;       R0=123,  then output "0.123 "
  214 00000198         ;       R0=9999, then output "9.999 "
  215 00000198         ;       R0>9999, then output "*.*** "
  216 00000198         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  217 00000198         LCD_OutFix
  218 00000198         ;; --UUU-- Complete this (copy from Lab7-8)
  219 00000198 E92D 0FF0       PUSH             {R4 - R11}  ; save callee regis
                                                            ters
  220 0000019C B085            SUB              SP, #20     ; allocate bytes fo
                                                            r local vars, max v
                                                            alue in each byte i
                                                            s 9
  221 0000019E         
  222 0000019E F04F 012A       MOV              R1, #42     ; ASCII code for *
  223 000001A2 F04F 022E       MOV              R2, #46     ; ASCII code for .
  224 000001A6 F88D 1000       STRB             R1, [SP, #q] ; default value is
                                                             *.***
  225 000001AA F88D 2004       STRB             R2, [SP, #r] ; r is always deci
                                                            mal point
  226 000001AE F88D 1008       STRB             R1, [SP, #s]
  227 000001B2 F88D 100C       STRB             R1, [SP, #t]
  228 000001B6 F88D 1010       STRB             R1, [SP, #u]
  229 000001BA         
  230 000001BA F242 710F       MOV              R1, #9999
  231 000001BE 4288            CMP              R0, R1      ; check if R0 > 999
                                                            9
  232 000001C0 D821            BHI              print
  233 000001C2         
  234 000001C2 F44F 717A       MOV              R1, #1000
  235 000001C6 FBB0 F2F1       UDIV             R2, R0, R1  ; divide R0 by 1000
                                                            
  236 000001CA FB01 0012       MLS              R0, R1, R2, R0 ; modulus divisi
                                                            on, mod in R0
  237 000001CE F102 0230       ADD              R2, #48
  238 000001D2 F88D 2000       STRB             R2, [SP, #q]
  239 000001D6         
  240 000001D6 F04F 0164       MOV              R1, #100
  241 000001DA FBB0 F2F1       UDIV             R2, R0, R1  ; divide R0 by 100
  242 000001DE FB01 0012       MLS              R0, R1, R2, R0 ; modulus divisi
                                                            on, mod in R0
  243 000001E2 F102 0230       ADD              R2, #48
  244 000001E6 F88D 2008       STRB             R2, [SP, #s]
  245 000001EA         
  246 000001EA F04F 010A       MOV              R1, #10
  247 000001EE FBB0 F2F1       UDIV             R2, R0, R1  ; divide R0 by 10



ARM Macro Assembler    Page 6 


  248 000001F2 FB01 0012       MLS              R0, R1, R2, R0 ; modulus divisi
                                                            on, mod in R0
  249 000001F6 F102 0230       ADD              R2, #48
  250 000001FA F88D 200C       STRB             R2, [SP, #t]
  251 000001FE F100 0030       ADD              R0, #48
  252 00000202 F88D 0010       STRB             R0, [SP, #u] ; remaining modulu
                                                            s is less than 10
  253 00000206         
  254 00000206         print
  255 00000206 F89D 0000       LDRB             R0, [SP, #q] ; print bound vari
                                                            ables
  256 0000020A B501            PUSH             {LR,R0}
  257 0000020C F7FF FFFE       BL               ST7735_OutChar
  258 00000210 E8BD 4001       POP              {LR,R0}
  259 00000214         
  260 00000214 F89D 0004       LDRB             R0, [SP, #r]
  261 00000218 B501            PUSH             {LR,R0}
  262 0000021A F7FF FFFE       BL               ST7735_OutChar
  263 0000021E E8BD 4001       POP              {LR,R0}
  264 00000222         
  265 00000222 F89D 0008       LDRB             R0, [SP, #s]
  266 00000226 B501            PUSH             {LR,R0}
  267 00000228 F7FF FFFE       BL               ST7735_OutChar
  268 0000022C E8BD 4001       POP              {LR,R0}
  269 00000230         
  270 00000230 F89D 000C       LDRB             R0, [SP, #t]
  271 00000234 B501            PUSH             {LR,R0}
  272 00000236 F7FF FFFE       BL               ST7735_OutChar
  273 0000023A E8BD 4001       POP              {LR,R0}
  274 0000023E         
  275 0000023E F89D 0010       LDRB             R0, [SP, #u]
  276 00000242 B501            PUSH             {LR,R0}
  277 00000244 F7FF FFFE       BL               ST7735_OutChar
  278 00000248 E8BD 4001       POP              {LR,R0}
  279 0000024C         
  280 0000024C B005            ADD              SP, #20     ; deallocate local 
                                                            variables
  281 0000024E E8BD 0FF0       POP              {R4 - R11}  ; pop callee regist
                                                            ers
  282 00000252 4770            BX               LR
  283 00000254         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  284 00000254         
  285 00000254                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  286 00000254                 END                          ; end of file
              3B9ACA00 
              05F5E100 
              00989680 
              000F4240 
              000186A0 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab9 -IS:\Keil\ARM\PACK\ARM\CMSIS\5
.3.0\CMSIS\Include -IS:\Keil\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C12
3 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 525" --predef
ine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file Print.s
   Uses
      None
Comment: .text unused
A0 00000182

Symbol: A0
   Definitions
      At line 194 in file Print.s
   Uses
      At line 137 in file Print.s
Comment: A0 used once
A1 00000174

Symbol: A1
   Definitions
      At line 188 in file Print.s
   Uses
      At line 133 in file Print.s
Comment: A1 used once
A2 00000166

Symbol: A2
   Definitions
      At line 182 in file Print.s
   Uses
      At line 129 in file Print.s
Comment: A2 used once
A3 00000158

Symbol: A3
   Definitions
      At line 176 in file Print.s
   Uses
      At line 125 in file Print.s
Comment: A3 used once
A4 0000014A

Symbol: A4
   Definitions
      At line 170 in file Print.s
   Uses
      At line 121 in file Print.s
Comment: A4 used once
A5 0000013C

Symbol: A5
   Definitions
      At line 164 in file Print.s
   Uses
      At line 117 in file Print.s
Comment: A5 used once
A6 0000012E

Symbol: A6



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 158 in file Print.s
   Uses
      At line 113 in file Print.s
Comment: A6 used once
A7 00000120

Symbol: A7
   Definitions
      At line 152 in file Print.s
   Uses
      At line 109 in file Print.s
Comment: A7 used once
A8 00000112

Symbol: A8
   Definitions
      At line 146 in file Print.s
   Uses
      At line 105 in file Print.s
Comment: A8 used once
A9 00000108

Symbol: A9
   Definitions
      At line 141 in file Print.s
   Uses
      At line 101 in file Print.s
Comment: A9 used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 37 in file Print.s
   Uses
      At line 25 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000198

Symbol: LCD_OutFix
   Definitions
      At line 217 in file Print.s
   Uses
      At line 26 in file Print.s
Comment: LCD_OutFix used once
print 00000206

Symbol: print
   Definitions
      At line 254 in file Print.s
   Uses
      At line 232 in file Print.s
Comment: print used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

q 00000000

Symbol: q
   Definitions
      At line 12 in file Print.s
   Uses
      At line 45 in file Print.s
      At line 99 in file Print.s
      At line 224 in file Print.s
      At line 238 in file Print.s
      At line 255 in file Print.s

r 00000004

Symbol: r
   Definitions
      At line 13 in file Print.s
   Uses
      At line 51 in file Print.s
      At line 103 in file Print.s
      At line 147 in file Print.s
      At line 225 in file Print.s
      At line 260 in file Print.s

s 00000008

Symbol: s
   Definitions
      At line 14 in file Print.s
   Uses
      At line 57 in file Print.s
      At line 107 in file Print.s
      At line 153 in file Print.s
      At line 226 in file Print.s
      At line 244 in file Print.s
      At line 265 in file Print.s

t 0000000C

Symbol: t
   Definitions
      At line 15 in file Print.s
   Uses
      At line 63 in file Print.s
      At line 111 in file Print.s
      At line 159 in file Print.s
      At line 227 in file Print.s
      At line 250 in file Print.s
      At line 270 in file Print.s

u 00000010

Symbol: u
   Definitions
      At line 16 in file Print.s
   Uses
      At line 69 in file Print.s
      At line 115 in file Print.s
      At line 165 in file Print.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 228 in file Print.s
      At line 252 in file Print.s
      At line 275 in file Print.s

v 00000014

Symbol: v
   Definitions
      At line 17 in file Print.s
   Uses
      At line 75 in file Print.s
      At line 119 in file Print.s
      At line 171 in file Print.s

w 00000018

Symbol: w
   Definitions
      At line 18 in file Print.s
   Uses
      At line 81 in file Print.s
      At line 123 in file Print.s
      At line 177 in file Print.s

x 0000001C

Symbol: x
   Definitions
      At line 19 in file Print.s
   Uses
      At line 87 in file Print.s
      At line 127 in file Print.s
      At line 183 in file Print.s

y 00000020

Symbol: y
   Definitions
      At line 20 in file Print.s
   Uses
      At line 93 in file Print.s
      At line 131 in file Print.s
      At line 189 in file Print.s

z 00000024

Symbol: z
   Definitions
      At line 21 in file Print.s
   Uses
      At line 97 in file Print.s
      At line 135 in file Print.s
      At line 195 in file Print.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 23 in file Print.s
   Uses
      At line 143 in file Print.s
      At line 149 in file Print.s
      At line 155 in file Print.s
      At line 161 in file Print.s
      At line 167 in file Print.s
      At line 173 in file Print.s
      At line 179 in file Print.s
      At line 185 in file Print.s
      At line 191 in file Print.s
      At line 197 in file Print.s
      At line 257 in file Print.s
      At line 262 in file Print.s
      At line 267 in file Print.s
      At line 272 in file Print.s
      At line 277 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 24 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
362 symbols in table
